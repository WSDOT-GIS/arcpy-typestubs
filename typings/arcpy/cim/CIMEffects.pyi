"""
This type stub file was generated by pyright.
"""

from .CIMEnum import *
from .CIMExternal import *

class CIMCameraEffect:
    """
    Represents a camera effect definition to be applied to a 3D view.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMPostprocessingEffect:
    """
    Represents a post-processing effect definition to be applied to
    a 3D view.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMVisualEffect:
    """
    Represents a visual effect definition for stylized rendering of
    all the content in a map or scene.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMBlackAndWhiteEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene to black and
    white.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMBloomPostprocessingEffect(CIMPostprocessingEffect):
    """
    Represents a post-processing technique that reshades the scene
    with a glow effect.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMBlueprintEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a blueprint
    style.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMColorGradingPostprocessingEffect(CIMPostprocessingEffect):
    """
    Represents a post-processing technique that reshades the scene
    with adjusted color and luminance.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMCrossMosaicEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a cross
    mosaic texture.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMDepthOfFieldEffect(CIMCameraEffect):
    """
    Represents the data for simulating camera depth of field effect
    in 3D scenes.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMGrainPostprocessingEffect(CIMPostprocessingEffect):
    """
    Represents a post-processing technique that reshades the scene
    with a grain effect.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMHalftoneEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with halftone.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMHexMosaicEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a hexagonal
    mosaic texture.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMMonochromaticEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene to monochromatic
    tones.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMOutlineEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with outlines.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMPencilSketchEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a pencil
    sketch style.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMPixelatedEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a pixelated
    style.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMTiltShiftEffect(CIMCameraEffect):
    """
    Represents the data for simulating camera tilt-shift effect for
    creating a miniaturization effect in 3D scenes.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMToonEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a cartoon
    style.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMVignettePostprocessingEffect(CIMPostprocessingEffect):
    """
    Represents a post-processing technique that reshades the scene
    with a vignette effect.
    """

    def __init__(self, *args, **Kwargs) -> None: ...

class CIMWatercolorEffect(CIMVisualEffect):
    """
    Represents a visual effect for reshading the scene with a watercolor
    style.
    """

    def __init__(self, *args, **Kwargs) -> None: ...
