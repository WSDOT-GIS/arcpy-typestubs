"""
This type stub file was generated by pyright.
"""

from enum import Enum

class BAVariableListValueType(Enum):
    """
    Represents variable value type.
    """

    Number = ...
    Percent = ...
    Average = ...
    Index = ...

class ChartAggregationType(Enum):
    """
    Options for choosing what aggregation type is to be used while
    calculating values.
    """

    eNone = ...
    Minimum = ...
    Maximum = ...
    Mean = ...
    Median = ...
    Sum = ...
    Majority = ...
    Minority = ...

class ChartColorType(Enum):
    """
    Provides a type of coloring that chart series uses.
    """

    SingleColor = ...
    ColorMatch = ...
    CustomColor = ...

class ChartDataTransformationType(Enum):
    """
    Types of a data transformation to apply before calculating histogram
    bins and counts.
    """

    eNone = ...
    Logarithmic = ...
    SquareRoot = ...
    Inverse = ...
    BoxCox = ...

class ChartDimensionalProfilePlotType(Enum):
    """
    Represents the temporal profile plot type.
    """

    Variables = ...
    Bands = ...
    DimensionValues = ...
    Variable = ...
    Band = ...
    CCDC = ...
    LandTrendr = ...
    Dimension = ...

class ChartFontWeight(Enum):
    """
    Chart font weight types.
    """

    Lighter = ...
    Normal = ...
    Bold = ...

class ChartGuideType(Enum):
    """
    Specifies the type of guide.
    """

    ChartGuideType_Line = ...
    ChartGuideType_Range = ...

class ChartLegendAlignment(Enum):
    """
    Chart legend alignment options.
    """

    Left = ...
    Right = ...
    Top = ...
    Bottom = ...

class ChartLineDashStyle(Enum):
    """
    Chart line dash style.
    """

    Solid = ...
    Dot = ...
    Dash = ...
    DashDot = ...
    LongDash = ...
    LongDashDot = ...

class ChartMapSelectionHandling(Enum):
    """
    Provides a choice of how map selection is processed in the chart.
    """

    eNone = ...
    Highlight = ...
    BuildFromSelectionSet = ...

class ChartMarkerSymbolStyle(Enum):
    """
    Chart marker symbol style.
    """

    Circle = ...
    Square = ...
    Diamond = ...
    Triangle = ...

class ChartMultiBarType(Enum):
    """
    Standard multiple bar series placement options.
    """

    eNone = ...
    SideBySide = ...
    Stacked = ...
    Stacked100 = ...

class ChartNullPolicy(Enum):
    """
    Options to handle null values.
    """

    Null = ...
    Zero = ...
    Interpolate = ...

class ChartPosition(Enum):
    """
    Specifies the position of the content for a target.
    """

    ChartPosition_Center = ...
    ChartPosition_Top = ...
    ChartPosition_Bottom = ...
    ChartPosition_Left = ...
    ChartPosition_Right = ...

class ChartProbabilityPlotType(Enum):
    """
    Chart probability plot types.
    """

    NormalQQPlot = ...
    QQPlot = ...

class ChartSPMDiagonalOption(Enum):
    """
    Scatter plot matrix diagonal display options.
    """

    eNone = ...
    Histogram = ...
    FieldName = ...

class ChartSPMDisplayOption(Enum):
    """
    Scatter plot matrix display options.
    """

    eNone = ...
    PreviewPlot = ...
    ScatterPlots = ...
    RSquared = ...
    PearsonsR = ...

class ChartSPMSortByType(Enum):
    """
    Scatter plot matrix sort-by type.
    """

    RSquared = ...
    PearsonsR = ...
    Alphabetical = ...
    Custom = ...

class ChartSortDirection(Enum):
    """
    Chart sort direction.
    """

    Ascending = ...
    Descending = ...

class ChartSurfaceProfilePlotType(Enum):
    """
    Represents the surface profile plot type.
    """

    SingleLayer = ...
    MultiLayer = ...

class ChartTextCase(Enum):
    """
    Options for choosing text cases for charts.
    """

    Normal = ...
    Uppercase = ...
    Lowercase = ...
    Capitalize = ...
    SmallCaps = ...

class ChartTimeAggregationType(Enum):
    """
    Options for choosing how time intervals are built for the aggregation
    of a time based X-axis field.
    """

    eNone = ...
    EqualIntervalsFromStartTime = ...
    EqualIntervalsFromEndTime = ...
    CalendarIntervals = ...

class ChartTrendLineFitType(Enum):
    """
    A fit type for a trend line.
    """

    ChartTrendLineFitType_Linear = ...
    ChartTrendLineFitType_Exponential = ...
    ChartTrendLineFitType_Logarithmic = ...
    ChartTrendLineFitType_Power = ...
    ChartTrendLineFitType_Fourier = ...
    ChartTrendLineFitType_Polynomial = ...
    ChartTrendLineFitType_MinX = ...
    ChartTrendLineFitType_MinY = ...
    ChartTrendLineFitType_MaxX = ...
    ChartTrendLineFitType_MaxY = ...
    ChartTrendLineFitType_AverageX = ...
    ChartTrendLineFitType_AverageY = ...

class ChartValueType(Enum):
    """
    Specifies the type of value.
    """

    ChartValueType_Numeric = ...
    ChartValueType_Temporal = ...

class SpectralProfileDisplayMode(Enum):
    """
    Spectral profile display modes.
    """

    MeanLine = ...
    Boxes = ...
    BoxesAndMeanLine = ...
    ConsolidatedBoxesAndMeanLine = ...

class ColorSpaceType(Enum):
    """
    Specifies color spaces used for colors.
    """

    RGB = ...
    CMYK = ...
    Gray = ...
    HSV = ...
    HLS = ...
    XYZ = ...
    LAB = ...
    Spot = ...

class FixedColorRampArrangementType(Enum):
    """
    Specifies the arrangement type for fixed color ramp.
    """

    Default = ...
    Bivariate = ...

class PolarDirection(Enum):
    """
    Specifies the direction of the polar progression for the path from
    the beginning hue to the ending hue.
    """

    Auto = ...
    Clockwise = ...
    Counterclockwise = ...

class DataEngineeringSourceFilterType(Enum):
    """
    Source filter to update the statistics.
    """

    eNone = ...
    Selection = ...
    Extent = ...
    SelectionAndExtent = ...

class DataEngineeringStatType(Enum):
    """
    Data engineering statistic type.
    """

    Mean = ...
    StandardDeviation = ...
    Maximum = ...
    Minimum = ...
    Median = ...
    Mode = ...
    FirstQuartile = ...
    ThirdQuartile = ...
    Sum = ...
    NumberOfNulls = ...
    Outliers = ...
    NumberUniqueValues = ...
    LeastCommon = ...
    Kurtosis = ...
    Skewness = ...
    CoefficientOfVariation = ...
    Range = ...
    IQR = ...
    Count = ...

class DataEngineeringTreatFieldAsType(Enum):
    """
    Treat Field as Type.
    """

    Numerical = ...
    Categorical = ...
    DateTime = ...
    Other = ...

class DataEngineeringViewLayoutType(Enum):
    """
    Statistic View Layout Type.
    """

    FieldsAndStatistics = ...
    OnlyStatistics = ...

class ProjectThumbnailAutomaticGenerationSource(Enum):
    """
    Represents the sources for automatic project thumbnail generation.
    """

    ActiveMap = ...
    SpecifiedMap = ...

class ProjectThumbnailGenerationMethod(Enum):
    """
    Represents the types of project thumbnail generation.
    """

    Manual = ...
    Automatic = ...

class SceneDrawingMode(Enum):
    """
    Represents the drawing modes of a scene view.
    """

    Perspective = ...
    Isometric = ...

class StatisticalDataCollectionSummaryType(Enum):
    """
    Represents the script language used by the statistical data collection.
    """

    Sum = ...
    Avg = ...
    Min = ...
    Max = ...
    Script = ...

class StatisticalReportFieldFormat(Enum):
    """
    How to display values of the field in reports.
    """

    Count = ...
    Percent = ...
    Currency = ...

class DepthOfFieldMaxBlur(Enum):
    """
    Represents the kernel sizes for depth of field camera effect.
    """

    Small = ...
    Medium = ...
    Large = ...
    VeryLarge = ...

class AltitudeMode(Enum):
    """
    Relative to the ground.
    """

    ClampToGround = ...
    RelativeToGround = ...
    Absolute = ...

class AnimationTransition(Enum):
    """
    Specifies the method of transition for a value in a keyframe.
    """

    eNone = ...
    Linear = ...
    Stepped = ...
    Hop = ...
    FixedArc = ...
    AdjustableArc = ...
    Hold = ...

class BaseElevationType(Enum):
    """
    A list of base elevation types.
    """

    Expression = ...
    Surface = ...
    Shape = ...

class BillboardMode(Enum):
    """
    A list of different billboard modes.
    """

    eNone = ...
    SignPost = ...
    FaceNearPlane = ...

class ColorModel(Enum):
    """
    Specifies color model used for maps and layouts.
    """

    RGB = ...
    CMYK = ...

class ColorVisionDeficiencyType(Enum):
    """
    Color vision deficiency types.
    """

    eNone = ...
    Deuteranopia = ...
    Protanopia = ...
    Tritanopia = ...

class DominantSizeAxis(Enum):
    """
    Specifies the dominant size axis types.
    """

    Z = ...
    X = ...
    Y = ...

class ElevationMode(Enum):
    """
    Specifies the types of elevation surfaces.
    """

    BaseGlobeSurface = ...
    CustomSurface = ...
    eNone = ...

class ExtrusionType(Enum):
    """
    The types of extrusion.
    """

    eNone = ...
    MinZ = ...
    MaxZ = ...
    Base = ...
    Absolute = ...

class FaceCulling3D(Enum):
    """
    The types of face culling.
    """

    Backface = ...
    Frontface = ...
    eNone = ...
    FromGeometry = ...

class GradientStrokeMethod(Enum):
    """
    The different methods of gradient strokes.
    """

    AcrossLine = ...
    AlongLine = ...

class MapLayerType(Enum):
    """
    The types of map layers by use in the map or scene.
    """

    Operational = ...
    BasemapBackground = ...
    BasemapTopReference = ...
    MapNotes = ...

class MapViewingMode(Enum):
    """
    The map viewing modes.
    """

    Map = ...
    SceneLocal = ...
    SceneGlobal = ...
    MapStereo = ...

class OffsetCurveMethod(Enum):
    """
    Indicates the way the strokes will display at corners.
    """

    Square = ...
    Mitered = ...
    Bevelled = ...
    Rounded = ...

class OffsetCurveOption(Enum):
    """
    Indicates the way strokes will handle complex geometries.
    """

    Fast = ...
    Accurate = ...

class PrimitiveShapeType(Enum):
    """
    Indicates the types of primitive shapes.
    """

    Unknown = ...
    Cone = ...
    Cube = ...
    Cylinder = ...
    Diamond = ...
    Sphere = ...
    Tetrahedron = ...

class PrimitiveType3D(Enum):
    """
    Indicates the types of 3D primitives.
    """

    TriangleStrip = ...
    TriangleFan = ...
    TriangleList = ...
    PointList = ...
    LineList = ...

class RangeRelation(Enum):
    """
    Range relation types.
    """

    Overlaps = ...
    OverlapsStartWithinEnd = ...
    AfterStartOverlapsEnd = ...
    Within = ...

class RasterResamplingType(Enum):
    """
    Raster resampling types.
    """

    NearestNeighbor = ...
    BilinearInterpolation = ...
    CubicConvolution = ...
    Majority = ...
    BilinearInterpolationPlus = ...
    BilinearGaussianBlur = ...
    BilinearGaussianBlurPlus = ...
    Average = ...
    Minimum = ...
    Maximum = ...
    VectorAverage = ...

class RasterStretchStatsType(Enum):
    """
    Raster stretch statistics types.
    """

    AreaOfView = ...
    Dataset = ...
    GlobalStats = ...

class RasterStretchType(Enum):
    """
    Raster stretch types.
    """

    eNone = ...
    DefaultFromSource = ...
    Custom = ...
    StandardDeviations = ...
    HistogramEqualize = ...
    MinimumMaximum = ...
    HistogramSpecification = ...
    PercentMinimumMaximum = ...
    Count = ...
    ESRI = ...

class RotationOrder(Enum):
    """
    Rotation order modes.
    """

    XYZ = ...
    ZXY = ...
    YXZ = ...

class ColorBalanceMethod(Enum):
    """
    A list of color balance methods.
    """

    Dodging = ...
    Histogram = ...
    StdDev = ...
    eNone = ...

class ColorCorrectionStretchType(Enum):
    """
    A list of color correction stretch types.
    """

    eNone = ...
    Adaptive = ...
    MinMax = ...
    StdDev = ...

class ColorMatchingMethod(Enum):
    """
    A list of color matching methods.
    """

    Statistics = ...
    Histogram = ...
    LinearCorrelation = ...
    eNone = ...

class ColorizerHillshadeType(Enum):
    """
    A list of hillshade types for colorizer.
    """

    Traditional = ...
    Multidirectional = ...

class ColorizerScalingType(Enum):
    """
    A list of scaling types for colorizer.
    """

    eNone = ...
    Adjusted = ...

class FlowRepresentationType(Enum):
    """
    A list of flow representation types.
    """

    From = ...
    To = ...

class MosaicSubLayerType(Enum):
    """
    Types of mosaic sublayers.
    """

    Boundary = ...
    Footprint = ...
    Image = ...
    Seamline = ...

class PansharpeningType(Enum):
    """
    Types of pansharpening.
    """

    IHS = ...
    Brovey = ...
    ESRI = ...
    Mean = ...

class RasterFootprintDrawMode(Enum):
    """
    Raster footprint draw modes.
    """

    All = ...
    OnlyPrimary = ...

class RasterHistogramEditType(Enum):
    """
    Raster histogram edit types.
    """

    Lines = ...
    Splines = ...
    Points = ...

class RasterMosaicMethod(Enum):
    """
    Raster mosaic methods.
    """

    eNone = ...
    Center = ...
    Nadir = ...
    Viewpoint = ...
    Attribute = ...
    LockRaster = ...
    Northwest = ...
    Seamline = ...

class RasterMosaicOperatorType(Enum):
    """
    Raster mosaic operator type.
    """

    First = ...
    Last = ...
    Min = ...
    Max = ...
    Mean = ...
    Blend = ...
    Sum = ...

class SpeedUnitType(Enum):
    """
    Speed unit types.
    """

    Unknown = ...
    MetersPerSecond = ...
    KilometersPerHour = ...
    Knots = ...
    FeetPerSecond = ...
    MilesPerHour = ...

class StretchType(Enum):
    """
    Stretch types.
    """

    Gamma = ...
    MinMax = ...
    StdDev = ...
    eNone = ...

class SymbolTileUnitType(Enum):
    """
    Symbol tile unit type.
    """

    Unknown = ...
    Feet = ...
    Miles = ...
    NauticalMiles = ...
    Meters = ...
    Kilometers = ...
    DecimalDegrees = ...
    Pixels = ...

class SymbolizationType(Enum):
    """
    Symbolization type.
    """

    Scalar = ...
    SingleArrow = ...
    WindBarbs = ...
    BeaufortWindKnots = ...
    BeaufortWindMetersPerSecond = ...
    OceanCurrentKnots = ...
    OceanCurrentMetersPerSecond = ...
    BeaufortWindMilesPerHour = ...
    BeaufortWindKilometersPerHour = ...
    ClassifiedArrow = ...
    Custom = ...

class TargetColorSurfaceType(Enum):
    """
    Target color surface type.
    """

    SingleColorPoint = ...
    ColorGrid = ...
    FirstOrderSurface = ...
    SecondOrderSurface = ...
    ThirdOrderSurface = ...

class CentralityRelationshipInterpretation(Enum):
    """
    Specifies the way relationships are interpreted for centrality
    computations.
    """

    Undirected = ...
    Directed = ...
    Reversed = ...

class CentralityScoresNormalization(Enum):
    """
    Specifies the normalization option for centrality scores.
    """

    eNone = ...
    Global = ...
    ByComponent = ...

class KnowledgeGraphSearchFilterScope(Enum):
    """
    Specifies the scope to restrict search.
    """

    Entities = ...
    Relationships = ...
    Both = ...

class KnowledgeLinkChartLayoutAlgorithm(Enum):
    """
    Specifies a Knowledge Link Chart layout algorithm.
    """

    Organic_Standard = ...
    Organic_LeafCircle = ...
    Organic_Fusiform = ...
    Organic_Community = ...
    Geographic_Organic_Standard = ...
    Basic_Grid = ...
    Tree_LeftToRight = ...
    Tree_RightToLeft = ...
    Tree_TopToBottom = ...
    Tree_BottomToTop = ...
    Radial_RootCentric = ...
    Radial_NodeCentric = ...
    Hierarchical_TopToBottom = ...
    Hierarchical_BottomToTop = ...

class FeaturesToLabel(Enum):
    """
    A list of types of features to label.
    """

    AllVisibleFeatures = ...
    MostCurrentTrackFeatures = ...

class LabelExpressionEngine(Enum):
    """
    Label expression engine types.
    """

    VBScript = ...
    JScript = ...
    Python = ...
    Arcade = ...

class LabelFeatureType(Enum):
    """
    The label feature types.
    """

    Point = ...
    Line = ...
    Polygon = ...

class MaplexAbbreviationType(Enum):
    """
    Maplex abbreviation types.
    """

    Translation = ...
    Keyword = ...
    Ending = ...

class MaplexAnchorPointType(Enum):
    """
    Maplex anchor point types.
    """

    GeometricCenter = ...
    ErodedCenter = ...
    Perimeter = ...
    UnclippedGeometricCenter = ...

class MaplexCenterLabelAnchorType(Enum):
    """
    Options to determine how to place a centered point label.
    """

    Symbol = ...
    FeatureGeometry = ...

class MaplexConnectionType(Enum):
    """
    Maplex connection types.
    """

    MinimizeLabels = ...
    Unambiguous = ...

class MaplexConstrainOffset(Enum):
    """
    Maplex offset constraint types.
    """

    NoConstraint = ...
    AboveLine = ...
    BelowLine = ...
    LeftOfLine = ...
    RightOfLine = ...

class MaplexContourAlignmentType(Enum):
    """
    Maplex contour alignment types.
    """

    Uphill = ...
    Page = ...
    Downhill = ...

class MaplexContourLadderType(Enum):
    """
    Maplex contour ladder types.
    """

    eNone = ...
    Straight = ...
    Curved = ...

class MaplexGraticuleAlignmentType(Enum):
    """
    Maplex graticule alignment types.
    """

    Straight = ...
    StraightNoFlip = ...
    Curved = ...
    CurvedNoFlip = ...

class MaplexKeyNumberHorizontalAlignment(Enum):
    """
    Maplex key number group horizontal alignment types.
    """

    Auto = ...
    Left = ...
    Right = ...

class MaplexKeyNumberMethod(Enum):
    """
    Options that describe how a key numbering group is used.
    """

    PreventUnplacedLabels = ...
    AlwaysNumber = ...

class MaplexKeyNumberResetType(Enum):
    """
    Identifies the options for reseting the key numbers in a Maplex
    key numbering group.
    """

    eNone = ...
    Maybe = ...
    Always = ...

class MaplexLabelAnchorPoint(Enum):
    """
    Maplex label anchor point.
    """

    CenterOfLabel = ...
    NearestSideOfLabel = ...
    FurthestSideOfLabel = ...

class MaplexLabelRotationType(Enum):
    """
    Maplex rotation types.
    """

    Geographic = ...
    Arithmetic = ...
    Radians = ...
    AV3 = ...

class MaplexLineFeatureType(Enum):
    """
    Maplex line feature types.
    """

    General = ...
    Street = ...
    StreetAddressRange = ...
    Contour = ...
    River = ...

class MaplexLinePlacementMethod(Enum):
    """
    Maplex line placement methods.
    """

    CenteredHorizontalOnLine = ...
    CenteredStraightOnLine = ...
    CenteredCurvedOnLine = ...
    CenteredPerpendicularOnLine = ...
    OffsetHorizontalFromLine = ...
    OffsetStraightFromLine = ...
    OffsetCurvedFromLine = ...
    OffsetPerpendicularFromLine = ...

class MaplexMultiPartOption(Enum):
    """
    Maplex multipart options.
    """

    OneLabelPerFeature = ...
    OneLabelPerPart = ...
    OneLabelPerSegment = ...

class MaplexOffsetAlongLineMethod(Enum):
    """
    Maplex offset along the line methods.
    """

    BestPositionAlongLine = ...
    BeforeStartOfLine = ...
    AlongLineFromStart = ...
    AlongLineFromEnd = ...
    AfterEndOfLine = ...

class MaplexPointPlacementMethod(Enum):
    """
    Maplex point placement methods.
    """

    AroundPoint = ...
    CenteredOnPoint = ...
    NorthOfPoint = ...
    NorthEastOfPoint = ...
    EastOfPoint = ...
    SouthEastOfPoint = ...
    SouthOfPoint = ...
    SouthWestOfPoint = ...
    WestOfPoint = ...
    NorthWestOfPoint = ...

class MaplexPolygonFeatureType(Enum):
    """
    Maplex polygon feature types.
    """

    General = ...
    LandParcel = ...
    River = ...
    Boundary = ...

class MaplexPolygonPlacementMethod(Enum):
    """
    Maplex polygon placement methods.
    """

    HorizontalInPolygon = ...
    StraightInPolygon = ...
    CurvedInPolygon = ...
    HorizontalAroundPolygon = ...
    RepeatAlongBoundary = ...
    CurvedAroundPolygon = ...

class MaplexQualityType(Enum):
    """
    Maplex quality types.
    """

    Low = ...
    Medium = ...
    High = ...

class MaplexRemoveAmbiguousLabelsType(Enum):
    """
    Options that describe when to remove ambiguous labels.
    """

    All = ...
    WithinLabelClass = ...
    eNone = ...

class MaplexRotationAlignmentType(Enum):
    """
    Maplex rotation alignment types.
    """

    Straight = ...
    Horizontal = ...
    Perpendicular = ...

class MaplexStackingAlignment(Enum):
    """
    Maplex stacking alignment.
    """

    ChooseBest = ...
    ConstrainLeftOrRight = ...
    ConstrainLeft = ...
    ConstrainRight = ...
    ConstrainCenter = ...

class MaplexUnit(Enum):
    """
    Maplex units.
    """

    Map = ...
    MM = ...
    Inch = ...
    Point = ...
    Percentage = ...

class StandardFeatureWeight(Enum):
    """
    Standard label engine feature weights.
    """

    eNone = ...
    Low = ...
    Medium = ...
    High = ...

class StandardLabelRotationType(Enum):
    """
    Standard label engine label rotation types.
    """

    Geographic = ...
    Arithmetic = ...
    Radians = ...
    AV3 = ...

class StandardLabelWeight(Enum):
    """
    Standard label engine label weight.
    """

    Low = ...
    Medium = ...
    High = ...

class StandardNumLabelsOption(Enum):
    """
    Standard label engine number of labels options.
    """

    NoLabelRestrictions = ...
    OneLabelPerName = ...
    OneLabelPerShape = ...
    OneLabelPerPart = ...

class StandardPointPlacementMethod(Enum):
    """
    Standard label engine point placement methods.
    """

    AroundPoint = ...
    OnTopPoint = ...
    SpecifiedAngles = ...
    RotationField = ...

class StandardPolygonPlacementMethod(Enum):
    """
    Standard label engine polygon placement methods.
    """

    AlwaysHorizontal = ...
    AlwaysStraight = ...
    MixedStrategy = ...

class DisplayCacheType(Enum):
    """
    Display cache types.
    """

    Permanent = ...
    InSession = ...
    eNone = ...
    MaxAge = ...

class ExaggerationMode(Enum):
    """
    Represents the exaggeration modes.
    """

    ScaleZ = ...
    ScaleVoxelHeight = ...

class Lighting3D(Enum):
    """
    The types of lighting.
    """

    OneSideDataNormal = ...
    OneSideResetNormal = ...
    TwoSideDataNormal = ...
    TwoSideResetNormal = ...
    TwoSideDataNormalFromWindingOrder = ...
    TwoSideResetNormalFromWindingOrder = ...

class SortOrderType(Enum):
    """
    Options to choose sort order type.
    """

    Ascending = ...
    Descending = ...

class Anchor(Enum):
    """
    A list of anchor positions for an element on a page layout.
    """

    Unspecified = ...
    TopLeftCorner = ...
    TopMidPoint = ...
    TopRightCorner = ...
    LeftMidPoint = ...
    CenterPoint = ...
    RightMidPoint = ...
    BottomLeftCorner = ...
    BottomMidPoint = ...
    BottomRightCorner = ...

class AutoCameraSource(Enum):
    """
    A list of the advanced map frame options that further controls
    the camera behavior.
    """

    eNone = ...
    Fixed = ...
    MapFrameLink = ...
    MapSeriesLink = ...

class AutoCameraType(Enum):
    """
    A list of the options available when using a fixed constraint.
    """

    Center = ...
    Scale = ...
    CenterAndScale = ...
    Extent = ...

class CondensedTabType(Enum):
    """
    Defines the type of condensed tab.
    """

    Round = ...
    Rectangle = ...
    RoundedRectangle = ...

class ContiguousTabType(Enum):
    """
    Represents a type of contiguous tabs.
    """

    Continuous = ...
    Rounded = ...
    Squared = ...

class CruisingAltitudeDiagramType(Enum):
    """
    A list of Cruising Altitude Diagram types.
    """

    Vertical = ...
    Horizontal = ...
    Quadrantal = ...

class DeclinationDirection(Enum):
    """
    Defines which direction declination will be calculated from.
    """

    West = ...
    East = ...

class DoubleFillScaleBarStyle(Enum):
    """
    A list of the styles available for a double file scale bar.
    """

    Hollow = ...
    Alternating = ...
    DoubleAlternating = ...

class EndPointPosition(Enum):
    """
    Enumerates which end a component is visible.
    """

    eNone = ...
    FromPoint = ...
    ToPoint = ...

class EndPointSelection(Enum):
    """
    Represents the selection of endPoints.
    """

    First = ...
    Interior = ...
    Last = ...

class ExtentFitType(Enum):
    """
    Extent fit types.
    """

    BestFit = ...
    ExtentCenter = ...
    DataDriven = ...

class ExtentIndicatorType(Enum):
    """
    Future implementation.
    """

    Frame = ...
    Rectangle = ...
    IndexFeatureFromDDP = ...

class FieldSortInfo(Enum):
    """
    Represents the sort information for a field.
    """

    eNone = ...
    Asc = ...
    AscCase = ...
    Desc = ...
    DescCase = ...

class FieldStatisticsFlag(Enum):
    """
    Represents field statistics.
    """

    NoStatistics = ...
    Count = ...
    Minimum = ...
    Maximum = ...
    Range = ...
    Sum = ...
    Mean = ...
    Median = ...
    Mode = ...
    StandardDeviation = ...

class GridElementType(Enum):
    """
    The type of component of the grid.
    """

    Line = ...
    Tick = ...
    Label = ...
    Corner = ...
    IntersectionPoint = ...

class GridLadderLabelPosition(Enum):
    """
    Represents the position at which the ladder labels are drawn.
    """

    Half = ...
    Third = ...
    Quarter = ...

class GridLineOrientation(Enum):
    """
    Represents the orientation of the grid line.
    """

    NorthSouth = ...
    EastWest = ...

class GridReferencePrecisionLevel(Enum):
    """
    List of precision levels for Military Grid Reference System (MGRS).
    """

    GridZoneDesignator = ...
    PrecisionLevel100km = ...
    PrecisionLevel10km = ...
    PrecisionLevel1km = ...
    PrecisionLevel100m = ...
    PrecisionLevel10m = ...
    PrecisionLevel1m = ...
    ICM = ...

class LeaderType(Enum):
    """
    A list of leader types for extent indicators.
    """

    eNone = ...
    LineToNearestPoint = ...
    LineToMidpoint = ...
    LineThroughCenters = ...
    CalloutToCenter = ...
    CalloutToEdge = ...
    CalloutToEdges = ...

class LegendFittingStrategy(Enum):
    """
    A list of legend fitting strategies.
    """

    AdjustSize = ...
    AdjustColumns = ...
    AdjustColumnsAndSize = ...
    AdjustFrame = ...
    ManualColumns = ...

class LegendItemArrangement(Enum):
    """
    A list of legend item arrangement options.
    """

    PatchLabelDescription = ...
    PatchDescriptionLabel = ...
    LabelPatchDescription = ...
    LabelDescriptionPatch = ...
    DescriptionPatchLabel = ...
    DescriptionLabelPatch = ...

class LegendKeepTogetherOption(Enum):
    """
    A list of choices for keeping legend parts together.
    """

    eNone = ...
    Items = ...
    Groups = ...

class MGRSLabelPosition(Enum):
    """
    Represents the position of the MGRS label in the 100,000m grid
    square.
    """

    Corner = ...
    Center = ...

class MapProductSpecType(Enum):
    """
    Defines the layout types that meet different map product specifications.
    """

    Unset = ...
    TLM = ...
    ICM = ...
    JOG = ...
    USTOPO = ...
    GNC = ...
    JNC = ...
    ONC = ...
    TPC = ...

class MeterReferenceSquareType(Enum):
    """
    Defines options for 100,000-Square identification area.
    """

    Single = ...
    Multiple = ...
    DualGrid = ...

class NorthType(Enum):
    """
    A list of north arrows types.
    """

    SimpleNorth = ...
    TrueNorth = ...
    GridNorth = ...
    MagneticNorth = ...

class Orientation(Enum):
    """
    A list of orientation values.
    """

    Horizontal = ...
    Vertical = ...

class PageOrientation(Enum):
    """
    A list of page orientation values.
    """

    Portrait = ...
    Landscape = ...

class ProfileFrameHeightOption(Enum):
    """
    Options for controlling the height of the profile element.
    """

    ConstantHeight = ...
    ConstantRatio = ...

class ProfileFrameStyle(Enum):
    """
    Available styles for profile frames.
    """

    AOC = ...
    PATC = ...

class ProfileFrameType(Enum):
    """
    Options to specify if profile is displaying straight or curved
    approach.
    """

    Straight = ...
    Curved = ...

class ProfileObstacleGroundDisplayOption(Enum):
    """
    Options for displaying the base of polygon/polyline obstacles.
    """

    Actual = ...
    Max = ...
    Min = ...
    Average = ...

class ProfileObstacleMarkerLocation(Enum):
    """
    Marker display location options.
    """

    Surface = ...
    Top = ...
    Base = ...

class ProfileObstacleSymbolSubstitutionType(Enum):
    """
    Types of symbol substitution used to display obstacles.
    """

    eNone = ...
    Penetrating = ...
    Protruding = ...

class ProfileTerrainDisplayOption(Enum):
    """
    Options to control how terrain data is displayed.
    """

    All = ...
    PenetratingOnly = ...
    Highlight = ...
    eNone = ...

class RectanglePosition(Enum):
    """
    A list of rectangle position values.
    """

    TopSide = ...
    BottomSide = ...
    LeftSide = ...
    RightSide = ...

class ScaleBarFittingStrategy(Enum):
    """
    A list of scale bar fitting strategies.
    """

    AdjustDivision = ...
    AdjustDivisions = ...
    AdjustDivisionAndDivisions = ...
    AdjustFrame = ...
    FixedWidth = ...
    FixedHeight = ...

class ScaleBarFrequency(Enum):
    """
    Lists the options for the frequency marks appear on the scale bar.
    """

    eNone = ...
    One = ...
    MajorDivisions = ...
    Divisions = ...
    DivisionsAndFirstMidpoint = ...
    DivisionsAndFirstSubdivisions = ...
    DivisionsAndSubdivisions = ...
    DivisionsFirstSubdivisionFirstMidpoint = ...

class ScaleBarLabelPosition(Enum):
    """
    Lists the options for scale bar label positions.
    """

    Above = ...
    BeforeLabels = ...
    AfterLabels = ...
    BeforeBar = ...
    AfterBar = ...
    Below = ...
    AboveLeft = ...
    AboveRight = ...
    AboveEnds = ...
    BeforeAndAfterLabels = ...
    BeforeAndAfterBar = ...
    BelowLeft = ...
    BelowRight = ...
    BelowEnds = ...
    OnBarAfterFirstDivision = ...

class ScaleBarVerticalPosition(Enum):
    """
    A list of scale bar vertical positions.
    """

    Above = ...
    Top = ...
    On = ...
    Bottom = ...
    Below = ...
    OnRight = ...
    OnLeft = ...

class StreetIndexDelimiter(Enum):
    """
    List of delimiters for column separation.
    """

    Period = ...
    Space = ...
    Hyphen = ...
    Underscore = ...

class StreetIndexWrapMethod(Enum):
    """
    A list of ways to wrap data across multiple columns in CIMMapProductBaseStreetIndex.
    """

    Wrap = ...
    GroupWrap = ...

class TableFrameFillingStrategy(Enum):
    """
    Table frame fitting strategies.
    """

    ShowAllRows = ...
    ShowVisibleRows = ...
    ShowMapSeriesRows = ...
    CustomWhereClause = ...

class TableFrameFittingStrategy(Enum):
    """
    Defines which table rows to display.
    """

    AdjustSize = ...
    AdjustColumns = ...
    AdjustColumnsAndSize = ...
    AdjustFrame = ...

class UnitType(Enum):
    """
    Lists the unit type values.
    """

    Percent = ...
    MapUnits = ...
    PageUnits = ...

class LinkChartLayoutAlgorithm(Enum):
    """
    Link chart layout algorithm.
    """

    Clustered = ...
    Organic = ...
    Hierarchy_TopToBottom = ...
    Hierarchy_BottomToTop = ...
    Hierarchy_LeftToRight = ...
    Hierarchy_RightToLeft = ...

class LinkChartLinkDashStyle(Enum):
    """
    Link chart link dash style.
    """

    Solid = ...
    Dot = ...
    Dash = ...
    DashDot = ...
    DashDotDot = ...

class LinkChartLinkLabelPlacement(Enum):
    """
    Link chart link label placement.
    """

    Parallel = ...
    Perpendicular = ...

class LinkChartRelationshipKeyType(Enum):
    """
    Link chart relationship key type.
    """

    eNone = ...
    Entities = ...
    Foreign = ...

class LinkChartSymbolizationSource(Enum):
    """
    Link chart node and entity symbolization source.
    """

    MapSymbology = ...
    SingleSymbology = ...

class ClipDistanceMode(Enum):
    """
    Specifies the clipping mode used for the map.
    """

    Automatic = ...
    Manual = ...

class ClippingMode(Enum):
    """
    Specifies the clipping mode used for the map.
    """

    eNone = ...
    MapExtent = ...
    CustomShape = ...
    MapSeries = ...

class ComparisonOperator(Enum):
    """
    Query builder comparison operator between fields.
    """

    IsEqual = ...
    NotEqual = ...
    LessThanOrEqualTo = ...
    LessThan = ...
    GreaterThanOrEqualTo = ...
    GreaterThan = ...

class CullDirection(Enum):
    """
    Represents the direction for clipping.
    """

    Inward = ...
    Outward = ...
    Camera = ...

class EditingElevationCaptureMode(Enum):
    """
    Defines the capture mode used to specify new Z values when creating
    or modifying features.
    """

    Off = ...
    Constant = ...
    Surface = ...

class GroundToGridScaleType(Enum):
    """
    Defines modes for specifying Scale for ground to grid corrections.
    """

    ConstantFactor = ...
    ComputeUsingElevation = ...

class IlluminationSource(Enum):
    """
    Illumination source types.
    """

    NoonAtCameraPosition = ...
    DateTime = ...
    AbsoluteSunPosition = ...
    MapTime = ...

class JoinOperator(Enum):
    """
    Query builder Boolean operator types.
    """

    And = ...
    Or = ...
    eNone = ...

class LocatorType(Enum):
    """
    Type of locators.
    """

    Locator = ...
    Layer = ...
    Table = ...

class MapType(Enum):
    """
    Types of maps.
    """

    Map = ...
    Scene = ...
    Basemap = ...
    NetworkDiagram = ...
    ContainmentMap = ...
    LinkChart = ...

class ReviewerMonotonicityDirection(Enum):
    """
    Reviewer monotonicity direction types.
    """

    NoneAsError = ...
    DecreasingValueAsError = ...
    IncreasingValueAsError = ...

class ReviewerMonotonicityEvaluationType(Enum):
    """
    Reviewer monotonicity evaluation types.
    """

    EvaluateNone = ...
    EvaluateZ = ...
    EvaluateM = ...

class ScaleDisplayFormat(Enum):
    """
    Scale display formats.
    """

    Value = ...
    Alias = ...
    ValueAndAlias = ...
    AliasAndValue = ...

class ScaleFormatType(Enum):
    """
    Scale format types.
    """

    Absolute = ...
    Imperial = ...

class SliderExtentType(Enum):
    """
    Slider extent types.
    """

    AllLayers = ...
    VisibleLayers = ...
    SingleLayer = ...
    CustomRange = ...

class SliderInteractionMode(Enum):
    """
    Slider interaction modes.
    """

    Slider = ...
    Picker = ...

class SliderStepType(Enum):
    """
    Slider step types.
    """

    Interval = ...
    Count = ...
    Feature = ...

class SnapRequestType(Enum):
    """
    Snap request types.
    """

    SnapRequestType_None = ...
    SnapRequestType_GeometricSnapping = ...
    SnapRequestType_VisualSnapping = ...
    SnapRequestType_GeometricAndVisualSnapping = ...

class SnapTipDisplayPart(Enum):
    """
    Snap tip display parts.
    """

    SnapTipDisplayNone = ...
    SnapTipDisplayLayer = ...
    SnapTipDisplayType = ...

class SnapXYToleranceUnit(Enum):
    """
    Snap XY tolerance units.
    """

    SnapXYToleranceUnitPixel = ...
    SnapXYToleranceUnitMap = ...

class StereoModelDisplayMode(Enum):
    """
    Stereo model display modes.
    """

    Default = ...
    OnlyLeftImage = ...
    OnlyRightImage = ...
    eNone = ...

class StereoOrientation(Enum):
    """
    Stereo model orientation.
    """

    UpOrRight = ...
    UpOrLeft = ...
    DownOrRight = ...
    DownOrLeft = ...

class StereoSourceType(Enum):
    """
    Stereo source types.
    """

    StereoModel = ...
    StereoModelCollection = ...

class SurfaceTINShadingMode(Enum):
    """
    Surface TIN shading modes.
    """

    Smooth = ...
    Flat = ...

class SwipeDirection(Enum):
    """
    Represents the direction from an edge of the view used to clip
    a layer.
    """

    eNone = ...
    Top = ...
    Bottom = ...
    Left = ...
    Right = ...

class TimeOffsetDirection(Enum):
    """
    Time offset direction.
    """

    Past = ...
    Future = ...
    PastAndFuture = ...

class TimeSnapMode(Enum):
    """
    Mode used for snapping the map's current time settings.
    """

    Automatic = ...
    Single = ...
    Interval = ...

class NDSRendererTarget(Enum):
    """
    Renderer target.
    """

    Edges = ...
    UserJunctions = ...
    SystemJunctions = ...
    Turns = ...
    Traffic = ...
    DirtyAreas = ...

class NetworkTravelModeSourceType(Enum):
    """
    The source type of the travel mode used by the travel mode context.
    """

    NetworkDataset = ...
    Layer = ...
    Custom = ...

class RestrictionStatus(Enum):
    """
    Restriction status.
    """

    GeneralTraversable = ...
    NeutralPreferenceLevelTraversable = ...
    Prohibited = ...
    AvoidPreferenceLevelTraversable = ...
    PreferPreferenceLevelTraversable = ...
    MixedPreferenceLevelTraversable = ...
    Invalid = ...

class TraversableDirections(Enum):
    """
    Traversable directions.
    """

    Prohibited = ...
    Traversable = ...
    OneWay = ...

class ValueType(Enum):
    """
    The data type of a value.
    """

    Short = ...
    Long = ...
    Float = ...
    Double = ...
    Date = ...
    String = ...
    Bool = ...

class DirectionFormatOption(Enum):
    """
    Direction format options.
    """

    DegreesMinutesSeconds = ...
    QuadrantBearing = ...

class DirectionType(Enum):
    """
    Direction type.
    """

    NorthAzimuth = ...
    SouthAzimuth = ...
    Polar = ...
    QuadrantBearing = ...

class DirectionUnits(Enum):
    """
    Direction units.
    """

    Radians = ...
    DecimalDegrees = ...
    DegreesMinutesSeconds = ...
    Gradians = ...
    Gons = ...

class FractionOption(Enum):
    """
    Fraction options.
    """

    Digits = ...
    Denominator = ...

class NumericAlignment(Enum):
    """
    Numeric alignment types.
    """

    AlignRight = ...
    AlignLeft = ...

class RoundingOption(Enum):
    """
    Rounding options.
    """

    NumberOfDecimals = ...
    NumberOfSignificantDigits = ...

class AttachmentDisplayType(Enum):
    """
    Attachment display types.
    """

    PreviewFirst = ...
    PreviewAll = ...
    List = ...

class PresentationMediaContentFitType(Enum):
    """
    Media content (image/video) fit types.
    """

    eNone = ...
    Fill = ...
    StretchToFill = ...
    Center = ...

class PresentationTransitionType(Enum):
    """
    Presentation transition types.
    """

    eNone = ...
    Swipe = ...
    Fade = ...

class ConnectionMode(Enum):
    """
    Connection modes.
    """

    Consumer = ...
    Admin = ...
    Publisher = ...

class IndexedSceneLayerType(Enum):
    """
    Indexed scene layer types.
    """

    IntegratedMesh = ...
    Point = ...
    Object3D = ...

class Object3DRenderingMode(Enum):
    """
    Specified how features are drawn.
    """

    eNone = ...
    Wireframe = ...

class ServerType(Enum):
    """
    Server types.
    """

    AGS = ...
    WMS = ...
    WCS = ...
    WMTS = ...
    WFS = ...
    OGCAPI = ...

class VoxelAlignment(Enum):
    """
    Represents voxel alignment.
    """

    Origin = ...
    Center = ...

class VoxelInterpolationMode(Enum):
    """
    Voxel interpolation mode.
    """

    Linear = ...
    Nearest = ...

class VoxelLayerOptimization(Enum):
    """
    Represents voxel layer optimization.
    """

    Visualization = ...
    Size = ...

class VoxelScalarFormat(Enum):
    """
    Voxel scalar formats.
    """

    I1 = ...
    U1 = ...
    I2 = ...
    U2 = ...
    I4 = ...
    U4 = ...
    I8 = ...
    U8 = ...
    F4 = ...
    F8 = ...

class VoxelValueFilterMode(Enum):
    """
    Voxel value filter modes.
    """

    Exclude = ...
    Include = ...

class VoxelVariableDataType(Enum):
    """
    Voxel variable data types.
    """

    Continuous = ...
    Discrete = ...

class VoxelVariablePrecision(Enum):
    """
    Voxel variable precision. The lower the precision the smaller the
    data size of the voxel layer.
    """

    InputData = ...
    Low = ...
    Medium = ...
    High = ...

class VoxelVisualization(Enum):
    """
    Represents voxel visualization.
    """

    Volume = ...
    Surface = ...

class FloodSimulationCulvertProfileType(Enum):
    """
    Culvert profile type.
    """

    Elliptical = ...
    Rectangular = ...
    Arched = ...

class FloodSimulationValueRangeType(Enum):
    """
    Value range types for playing flood simulation.
    """

    FlowIntensity = ...
    WaterDepth = ...

class BivariateGridLegendLabelStrategy(Enum):
    """
    Bivariate grid label strategy.
    """

    Corners = ...
    Sides = ...

class BivariateGridLegendOrientationType(Enum):
    """
    Bivariate grid orientation type.
    """

    eNone = ...
    High = ...
    Low = ...
    HighLow = ...
    LowHigh = ...

class BivariateGridSizeOption(Enum):
    """
    Bivariate grid size option.
    """

    TwoByTwo = ...
    ThreeByThree = ...
    FourByFour = ...

class ClassBreakType(Enum):
    """
    Class break types.
    """

    GraduatedColor = ...
    GraduatedSymbol = ...
    UnclassedColor = ...

class ClassificationMethod(Enum):
    """
    Classification methods.
    """

    DefinedInterval = ...
    EqualInterval = ...
    GeometricalInterval = ...
    Manual = ...
    NaturalBreaks = ...
    Quantile = ...
    StandardDeviation = ...

class DataNormalizationMethod(Enum):
    """
    Data normalization methods.
    """

    Field = ...
    Log = ...
    PercentOfTotal = ...
    Nothing = ...

class ExpressionReturnType(Enum):
    """
    Visual variable info types.
    """

    Default = ...
    String = ...
    Numeric = ...

class PatchShape(Enum):
    """
    Patch shapes.
    """

    Default = ...
    Point = ...
    LineHorizontal = ...
    LineZigZag = ...
    LineAngles = ...
    LineArc = ...
    LineCurve = ...
    LineTrail = ...
    LineHydro = ...
    LineVertical3D = ...
    LineZigZag3D = ...
    LineCorkscrew3D = ...
    AreaRectangle = ...
    AreaRoundedRectangle = ...
    AreaPolygon = ...
    AreaCircle = ...
    AreaEllipse = ...
    AreaFootprint = ...
    AreaBoundary = ...
    AreaHydroPoly = ...
    AreaNaturalPoly = ...
    AreaSquare = ...
    AreaHexagonFlat = ...
    AreaHexagonPointy = ...

class PolygonSymbolColorTarget(Enum):
    """
    Polygon symbol color apply targets.
    """

    Fill = ...
    Outline = ...
    FillOutline = ...

class SizeVisualVariableAxis(Enum):
    """
    Size visual variable axis.
    """

    HeightAxis = ...
    WidthAxis = ...
    DepthAxis = ...
    WidthAndDepthAxes = ...
    AllAxes = ...

class SizeVisualVariableType(Enum):
    """
    Size visual variable type.
    """

    eNone = ...
    Expression = ...
    Random = ...
    Proportional = ...
    Graduated = ...

class SymbolRotationType(Enum):
    """
    Symbol rotation types.
    """

    Geographic = ...
    Arithmetic = ...

class SymbolShapes(Enum):
    """
    Symbol shapes.
    """

    Unknown = ...
    Circle = ...
    Square = ...

class ValueRepresentations(Enum):
    """
    Represents value representations.
    """

    Radius = ...
    Area = ...
    Distance = ...
    Width = ...

class VisualVariableInfoType(Enum):
    """
    Visual variable info types.
    """

    eNone = ...
    Expression = ...
    Random = ...

class AngleAlignment(Enum):
    """
    Angle alignment types.
    """

    Display = ...
    Map = ...

class AnimatedSymbolRepeatType(Enum):
    """
    Represents the ways an animated symbol can be repeated.
    """

    eNone = ...
    Loop = ...
    Oscillate = ...

class BalloonCalloutStyle(Enum):
    """
    Balloon callout styles.
    """

    Rectangle = ...
    RoundedRectangle = ...
    Oval = ...

class BlendingMode(Enum):
    """
    Blending modes.
    """

    eNone = ...
    Alpha = ...
    Screen = ...
    Multiply = ...
    Add = ...
    Color = ...
    ColorBurn = ...
    ColorDodge = ...
    Darken = ...
    Difference = ...
    Exclusion = ...
    HardLight = ...
    Hue = ...
    Lighten = ...
    Luminosity = ...
    Normal = ...
    Overlay = ...
    Saturation = ...
    SoftLight = ...
    LinearBurn = ...
    LinearDodge = ...
    LinearLight = ...
    PinLight = ...
    VividLight = ...

class BlockProgression(Enum):
    """
    Block progressions.
    """

    TTB = ...
    RTL = ...
    BTT = ...

class CGAAttributeType(Enum):
    """
    CGA attribute type.
    """

    Float = ...
    String = ...
    Boolean = ...
    Float_Array = ...
    String_Array = ...
    Boolean_Array = ...

class ClippingType(Enum):
    """
    Clipping types.
    """

    Intersect = ...
    Subtract = ...

class ExternalColorMixMode(Enum):
    """
    Options to control how material combines with externally defined
    colors.
    """

    Tint = ...
    Ignore = ...
    Multiply = ...

class ExtremityPlacement(Enum):
    """
    Extremity placement options which specify at which ends of the
    line a marker will be placed.
    """

    Both = ...
    JustBegin = ...
    JustEnd = ...
    eNone = ...

class FillMode(Enum):
    """
    Fill modes.
    """

    Mosaic = ...
    Centered = ...

class FontEffects(Enum):
    """
    Font effects.
    """

    Normal = ...
    Superscript = ...
    Subscript = ...

class FontEncoding(Enum):
    """
    Font encodings.
    """

    MSSymbol = ...
    Unicode = ...

class FontType(Enum):
    """
    Font types.
    """

    Unspecified = ...
    TrueType = ...
    PSOpenType = ...
    TTOpenType = ...
    Type1 = ...

class GeometricEffectArrowType(Enum):
    """
    Geometric effect arrow types.
    """

    OpenEnded = ...
    Block = ...
    Crossed = ...

class GeometricEffectControlMeasureLineRule(Enum):
    """
    Specifies the rules to transform the input ground control points
    given as a line.
    """

    FullGeometry = ...
    PerpendicularFromFirstSegment = ...
    ReversedFirstSegment = ...
    PerpendicularToSecondSegment = ...
    SecondSegmentWithTicks = ...
    DoublePerpendicular = ...
    OppositeToFirstSegment = ...
    TriplePerpendicular = ...
    HalfCircleFirstSegment = ...
    HalfCircleSecondSegment = ...
    HalfCircleExtended = ...
    OpenCircle = ...
    CoverageEdgesWithTicks = ...
    GapExtentWithDoubleTicks = ...
    GapExtentMidline = ...
    Chevron = ...
    PerpendicularWithArc = ...
    ClosedHalfCircle = ...
    TripleParallelExtended = ...
    ParallelWithTicks = ...
    Parallel = ...
    PerpendicularToFirstSegment = ...
    ParallelOffset = ...
    OffsetOpposite = ...
    OffsetSame = ...
    CircleWithArc = ...
    DoubleJog = ...
    PerpendicularOffset = ...
    LineExcludingLastSegment = ...
    MultivertexArrow = ...
    CrossedArrow = ...
    ChevronArrow = ...
    ChevronArrowOffset = ...
    PartialFirstSegment = ...
    Arch = ...
    CurvedParallelTicks = ...
    Arc90Degrees = ...

class GeometricEffectDonutMethod(Enum):
    """
    Geometric effect donut methods.
    """

    Mitered = ...
    Bevelled = ...
    Rounded = ...
    Square = ...
    TrueBuffer = ...

class GeometricEffectEnclosingPolygonMethod(Enum):
    """
    Geometric effect enclosing polygon methods.
    """

    ClosePath = ...
    ConvexHull = ...
    RectangularBox = ...

class GeometricEffectExtensionOrigin(Enum):
    """
    Geometric effect extension origins. Specifies the origin of the
    extension to add to the line. The beginning and end of the line
    is defined by the direction the line was digitized.
    """

    BeginningOfLine = ...
    EndOfLine = ...

class GeometricEffectLocalizerFeatherStyle(Enum):
    """
    Geometric effect localizer feather styles.
    """

    Complete = ...
    Left = ...
    Right = ...

class GeometricEffectOffsetMethod(Enum):
    """
    Geometric effect offset method which specifies the way the strokes
    or fills are displayed at corners.
    """

    Mitered = ...
    Bevelled = ...
    Rounded = ...
    Square = ...

class GeometricEffectOffsetOption(Enum):
    """
    Geometric effect offset options which specify the way the symbol
    handles complex geometries.
    """

    Fast = ...
    Accurate = ...

class GeometricEffectOffsetTangentMethod(Enum):
    """
    Geometric effect offset tangent methods which specify the origin
    of the tangent offset for the line. The beginning and end of the
    lines are defined by how the line was digitized.
    """

    BeginningOfLine = ...
    EndOfLine = ...

class GeometricEffectWaveform(Enum):
    """
    Geometric effect offset waveforms.
    """

    Sinus = ...
    Square = ...
    Triangle = ...
    Random = ...

class GlyphHinting(Enum):
    """
    Glyph hinting options.
    """

    eNone = ...
    Default = ...
    Force = ...

class GradientAlignment(Enum):
    """
    Gradient alignment types.
    """

    Buffered = ...
    Left = ...
    Right = ...
    AlongLine = ...

class GradientFillMethod(Enum):
    """
    Describes the gradient fill method which is how the gradient is
    applied.
    """

    Linear = ...
    Rectangular = ...
    Circular = ...
    Buffered = ...

class GradientStrokeType(Enum):
    """
    Gradient stroke types.
    """

    Discrete = ...
    Continuous = ...

class HorizontalAlignment(Enum):
    """
    Horizontal alignment types.
    """

    Left = ...
    Right = ...
    Center = ...
    Justify = ...

class LeaderLineStyle(Enum):
    """
    The style of line to generate when a leader is drawn defined by
    an enumeration value. Line leaders will always be drawn with their
    own geometry.
    """

    Base = ...
    MidPoint = ...
    ThreePoint = ...
    FourPoint = ...
    Underline = ...
    CircularCW = ...
    CircularCCW = ...

class LineCapStyle(Enum):
    """
    The style of stroke ending caps.
    """

    Butt = ...
    Round = ...
    Square = ...

class LineDashEnding(Enum):
    """
    Determines how the strokes with dash patterns and other patterns
    (tiled pictures, placement effects) are handled at the end points
    of the line geometry's segments.
    """

    NoConstraint = ...
    HalfPattern = ...
    HalfGap = ...
    FullPattern = ...
    FullGap = ...
    Custom = ...

class LineDecorationStyle(Enum):
    """
    Defines simple decorations for lines.
    """

    eNone = ...
    Custom = ...
    Circle = ...
    OpenArrow = ...
    ClosedArrow = ...
    Diamond = ...

class LineGapType(Enum):
    """
    Specifies the type of line gap (line spacing) that is applied.
    """

    ExtraLeading = ...
    Multiple = ...
    Exact = ...

class LineJoinStyle(Enum):
    """
    Specifies how the symbol is drawn at the stroke segment connections.
    """

    Bevel = ...
    Round = ...
    Miter = ...

class MarkerPlacementType(Enum):
    """
    Marker placement types.
    """

    InsidePolygon = ...
    PolygonCenter = ...
    RandomlyInsidePolygon = ...

class MaterialMode(Enum):
    """
    Material modes.
    """

    Tint = ...
    Replace = ...
    Multiply = ...

class PlacementAroundPolygonPosition(Enum):
    """
    Options for how markers are placed in a uniform grid or randomly.
    """

    Top = ...
    Bottom = ...
    Left = ...
    Right = ...
    TopLeft = ...
    TopRight = ...
    BottomLeft = ...
    BottomRight = ...

class PlacementClip(Enum):
    """
    Options for how the markers should be clipped at the polygon boundary.
    """

    ClipAtBoundary = ...
    RemoveIfCenterOutsideBoundary = ...
    DoNotTouchBoundary = ...
    DoNotClip = ...

class PlacementEndings(Enum):
    """
    Options for how markers are placed at extremities and control points.
    """

    NoConstraint = ...
    WithMarkers = ...
    WithFullGap = ...
    WithHalfGap = ...
    Custom = ...

class PlacementGridType(Enum):
    """
    Options for how markers are placed in a uniform grid or randomly.
    """

    Fixed = ...
    Random = ...
    RandomFixedQuantity = ...

class PlacementOnLineRelativeTo(Enum):
    """
    Options for the location on a line where a marker will be placed.
    """

    LineMiddle = ...
    LineBeginning = ...
    LineEnd = ...
    SegmentMidpoint = ...

class PlacementPolygonCenterMethod(Enum):
    """
    Options for how a single marker will be placed within the polygon.
    """

    OnPolygon = ...
    CenterOfMass = ...
    BoundingBoxCenter = ...

class PlacementRandomlyAlongLineRandomization(Enum):
    """
    Options for the amount of randomness to be used for the size and
    rotation of the markers on the line.
    """

    Low = ...
    Medium = ...
    High = ...

class PlacementStepPosition(Enum):
    """
    Options for the placement step position.
    """

    MarkerCenter = ...
    MarkerBounds = ...

class PointSymbolCalloutScale(Enum):
    """
    An enumeration that defines how the background point symbol is
    scaled to fit the dimensions of the text.
    """

    eNone = ...
    PropUniform = ...
    PropNonuniform = ...
    DifUniform = ...
    DifNonuniform = ...

class Simple3DLineStyle(Enum):
    """
    Simple 3D line styles which define how strokes will be rendered
    in 3D.
    """

    Tube = ...
    Strip = ...
    Wall = ...

class SimplePlacementEndings(Enum):
    """
    Options for how markers are placed at extremities and control points
    for the Variable Size marker placement.
    """

    WithHalfGap = ...
    WithMarkers = ...

class SizeVariationMethod(Enum):
    """
    Size variation methods which define the order in which the change
    of size in the markers should occur.
    """

    Random = ...
    Increasing = ...
    Decreasing = ...
    IncreasingThenDecreasing = ...

class SymbolUnits(Enum):
    """
    Symbol unit types.
    """

    Relative = ...
    Absolute = ...

class TextCase(Enum):
    """
    The letter case used to draw text.
    """

    Normal = ...
    LowerCase = ...
    Allcaps = ...

class TextReadingDirection(Enum):
    """
    Text reading directions.
    """

    LTR = ...
    RTL = ...

class TextureFilter(Enum):
    """
    Texture filter types.
    """

    Draft = ...
    Picture = ...
    Text = ...

class VerticalAlignment(Enum):
    """
    Vertical alignment types.
    """

    Top = ...
    Center = ...
    Baseline = ...
    Bottom = ...

class VerticalGlyphOrientation(Enum):
    """
    Vertical glyph orientation.
    """

    Right = ...
    Upright = ...

class WaterbodySize(Enum):
    """
    Waterbody size.
    """

    Small = ...
    Medium = ...
    Large = ...

class WaveStrength(Enum):
    """
    Strength of waves.
    """

    Calm = ...
    Rippled = ...
    Slight = ...
    Moderate = ...

class LASStretchAttribute(Enum):
    """
    LAS stretch attributes.
    """

    Elevation = ...
    RGB = ...
    Red = ...
    Green = ...
    Blue = ...
    NearInfrared = ...
    Intensity = ...
    ScanAngle = ...
    GPSTime = ...
    eNone = ...

class LASStretchDrawingType(Enum):
    """
    LAS stretch drawing type.
    """

    Symbol = ...
    Splat = ...
    SymbolTint = ...

class LASStretchStatsType(Enum):
    """
    LAS stretch statistic types.
    """

    AreaOfView = ...
    Dataset = ...
    GlobalStats = ...

class LASStretchType(Enum):
    """
    LAS stretch types.
    """

    DefaultFromSource = ...
    Custom = ...
    MinimumMaximum = ...
    StandardDeviations = ...
    Histogram = ...
    PercentMinMax = ...

class PointCloudFieldTransformType(Enum):
    """
    Point cloud field transform types.
    """

    eNone = ...
    LowFourBit = ...
    HighFourBit = ...
    AbsoluteValue = ...
    ModuloTen = ...

class PointCloudReturnType(Enum):
    """
    Point cloud return types.
    """

    Last = ...
    FirstOfMany = ...
    LastOfMany = ...
    Single = ...
    All = ...

class PointCloudShapeType(Enum):
    """
    Point cloud shape types.
    """

    DiskFlat = ...
    DiskShaded = ...

class PointCloudValueFilterMode(Enum):
    """
    Point cloud value filter modes.
    """

    Exclude = ...
    Include = ...

class TerrainDrawCursorType(Enum):
    """
    Terrain draw cursor types.
    """

    Composite = ...
    NodeSimple = ...
    NodeValue = ...
    NodeElevation = ...
    EdgeSimple = ...
    EdgeType = ...
    FaceSimple = ...
    FaceElevation = ...
    FaceSlope = ...
    FaceAspect = ...
    FaceValue = ...
    TerrainPointElevation = ...
    TerrainPointAttributeGraduated = ...
    TerrainPointAttributeUnique = ...
    TerrainDirtyArea = ...

class TimelineViewType(Enum):
    """
    Timeline view type.
    """

    DefaultView = ...
    SummaryView = ...

class BarrierWeight(Enum):
    """
    Barrier weights.
    """

    eNone = ...
    Low = ...
    Medium = ...
    High = ...

class BindVariableType(Enum):
    """
    Bind variable types.
    """

    String = ...
    Integer = ...
    Double = ...
    Date = ...
    Geometry = ...

class BinsToPointsThresholdType(Enum):
    """
    A threshold for determining when binned features should be shown
    as points.
    """

    MaxScale = ...
    FeatureCount = ...

class DataSearchMode(Enum):
    """
    Field search modes.
    """

    Contains = ...
    Exact = ...

class DimensionMarkerFit(Enum):
    """
    Dimension marker fit options.
    """

    eNone = ...
    Tolerance = ...
    Text = ...

class DimensionPartOptions(Enum):
    """
    Dimension part options.
    """

    Begin = ...
    End = ...
    eNone = ...
    Both = ...

class DimensionTextFit(Enum):
    """
    Dimension text fit options.
    """

    eNone = ...
    MoveBegin = ...
    MoveEnd = ...

class DimensionTextOption(Enum):
    """
    Dimension text options.
    """

    Only = ...
    Suffix = ...
    Expression = ...
    eNone = ...

class DimensionType(Enum):
    """
    Dimension types supported by dimension features.
    """

    Aligned = ...
    Linear = ...

class DisciplineType(Enum):
    """
    Represents the discipline type of a building layer.
    """

    Architectural = ...
    Electrical = ...
    Mechanical = ...
    Piping = ...
    Structural = ...
    Infrastructure = ...

class DisplayFilterType(Enum):
    """
    DisplayFilterType.
    """

    ByChoice = ...
    ByScale = ...

class FeatureCacheType(Enum):
    """
    Feature cache type options.
    """

    eNone = ...
    Session = ...

class FeatureExpirationMethod(Enum):
    """
    Stream service feature expiration method.
    """

    MaximumFeatureCount = ...
    MaximumFeatureAge = ...

class FloorFilterRank(Enum):
    """
    Represents the rank or "level" at which the layer participates
    in filtering for Indoors or floor-aware layers.
    """

    eNone = ...
    Site = ...
    Facility = ...
    Level = ...

class HtmlPopupStyle(Enum):
    """
    HTML pop-up styles.
    """

    TwoColumnTable = ...
    RedirectedHTML = ...
    XSLStyleSheet = ...

class LocationConditionType(Enum):
    """
    Location condition types.
    """

    In = ...
    Depart = ...
    Out = ...
    Arrive = ...
    Cross = ...
    Crossover = ...

class S52AreaSymbolizationType(Enum):
    """
    ENC area symbolization type. This is used to specify whether areas
    should be symbolized with plain or traditional symbols.
    """

    Plain = ...
    Symbolized = ...

class S52ColorScheme(Enum):
    """
    ENC Color Schemes.
    """

    Day = ...
    Dusk = ...
    Night = ...

class S52DepthDisplayUnits(Enum):
    """
    ENC Depth Display Units.
    """

    Meters = ...
    Feet = ...
    Fathoms = ...

class S52PointSymbolizationType(Enum):
    """
    ENC point symbolization options. This is used to specify whether
    point features should be symbolized with simplified or paperchart
    symbols.
    """

    PaperChart = ...
    Simplified = ...

class SymbolSubstitutionType(Enum):
    """
    Symbol substitution types.
    """

    eNone = ...
    Color = ...
    IndividualSubordinate = ...
    IndividualDominant = ...

class TemporalFeatureClassCachingMode(Enum):
    """
    Temporal feature class caching modes.
    """

    All = ...
    eNone = ...

class TemporalFeatureClassPurgeRule(Enum):
    """
    Temporal feature class purge rules.
    """

    KeepLatestPerTrack = ...
    PurgeOldest = ...

class TrajectorySubLayerType(Enum):
    """
    Types of trajectory sublayers.
    """

    Footprint = ...
    Point = ...

class WorkspaceFactory(Enum):
    """
    Workspace factory types.
    """

    SDE = ...
    FileGDB = ...
    Raster = ...
    Shapefile = ...
    OLEDB = ...
    Access = ...
    DelimitedTextFile = ...
    Custom = ...
    Sql = ...
    Tin = ...
    TrackingServer = ...
    NetCDF = ...
    LASDataset = ...
    SQLite = ...
    FeatureService = ...
    ArcInfo = ...
    Cad = ...
    Excel = ...
    WFS = ...
    StreamService = ...
    BIMFile = ...
    InMemoryDB = ...
    NoSQL = ...
    BigDataConnection = ...
    KnowledgeGraph = ...
    NITF = ...
