"""
This type stub file was generated by pyright.
"""

__all__ = [
    "_BaseArcObject",
    "_ObjectWithoutInitCall",
    "passthrough_attr",
    "pass_parameterized_attr",
    "FromScriptingArcObject",
]

class _ArcobjectPassthrough:
    def __getattr__(self, attr): ...
    def __setattr__(self, attr, val): ...
    def __delattr__(self, attr): ...

class _BaseArcObject:
    _arc_object = ...
    def __init__(self, *args, **kwargs) -> None:
        """Wrapper for ArcGIS scripting Arc Objects --
        Create a new object instance if no reference is passed in."""
        ...
    def __repr__(self): ...
    def __str__(self) -> str: ...
    def __cmp__(self, other): ...

class _ObjectWithoutInitCall:
    """Provide classes that inherit with this an implementation-free way
    to wrap instances without calling __init__"""

    @classmethod
    def __from_scripting_arc_object__(cls, wrap_object): ...

class _ObjectWithoutInitCallWrapper:
    """Provide classes that inherit with this an implementation-free way
    to wrap instances without calling __init__"""

    @classmethod
    def __from_scripting_arc_object__(cls, wrap_object): ...

def passthrough_attr(attr_name, readonly=..., doc=...): ...
def pass_parameterized_attr(attr_name, *args, **kwargs):  # -> property:
    """Adding support to pass attribute while pulling an attribute.
    TODO: incorporate with the passthrough_attr"""
    ...

def FromScriptingArcObject(cls, obj):  # -> conversion:
    """Bypass the constructor for objects created from existing arc objects."""

    class conversion: ...
