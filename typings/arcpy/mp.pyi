"""
This type stub file was generated by pyright.
"""

from arcpy._mp import constants as _constants

def CreateWebLayerSDDraft(map_or_layers, out_sddraft, service_name, server_type=..., service_type=..., folder_name=..., overwrite_existing_service=..., copy_data_to_server=..., enable_editing=..., allow_exporting=..., enable_sync=..., summary=..., tags=..., description=..., credits=..., use_limitations=...): # -> conversion | int | float | complex | basestring | list[Unknown] | tuple[Unknown, ...] | dict[Unknown, Unknown]:
    """CreateWebLayerSDDraft(map_or_layers, out_sddraft, service_name,
       {server_type}, {service_type}, {folder_name},
       {overwrite_existing_service}, {copy_data_to_server}, {enable_editing},
       {allow_exporting}, {enable_sync}, {summary}, {tags}, {description},
       {credits}, {use_limitations})

       Converts a map, layer, or list of layers in an ArcGIS Project   to a
       Service Definition Draft ( .sddraft )  file.

         map_or_layers(Object):
       A variable that references a Map object, Layer object, or a list of Layer
       objects. If publishing a list of Layer objects, they must be from the
       same map.

         out_sddraft(String):
       A string that represents the path and file name for the output Service
       Definition Draft ( .sddraft ) file.

         service_name(String):
       A string that represents the name of the service. This is the name people
       will see and use to identify the service. The name can only contain
       alphanumeric characters and underscores. No spaces or special characters
       are allowed. The name cannot be more than 120 characters in length.

         server_type{String}:
       A string representing the server type.
        Currently, the only supported value is HOSTING_SERVER for ArcGIS
        Online .

         service_type{String}:
       A string representing the service type.

        * FEATURE_ACCESS: FEATURE_ACCESS supports vector querying,
        visualization, and editing.

        * TILED: TILED supports fast map visualization using a collection of
        predrawn map
       images or tiles. These tiles are created and stored on the server
       after you upload your data.

         folder_name{String}:
       A string that represents  a folder name to which you want to publish the
       service definition. If the folder does not currently exist, it will be
       created.  The default folder is the server root level.

         overwrite_existing_service{Boolean}:
       A Boolean that determines whether to overwrite an existing service or
       not.

         copy_data_to_server{Boolean}:
       A Boolean that indicates whether the data referenced in the map or layers
       are copied to the server or not.

         enable_editing{Boolean}:
       A Boolean that determines if editing of feature services is
       enabled. Query capability is always on. Editing is optional.

         allow_exporting{Boolean}:
       A Boolean that determines if users can export the service to
       different formats.

         enable_sync{Boolean}:
       A Boolean that determines if users can work with a local copy of the data
       even when they are offline and
       synchronize changes when they are online.

         summary{String}:
       A string that represents the summary.

         tags{String}:
       A string that represents the tags. Multiple tags can be added or
       separated by a comma or semicolon.

         description{String}:
       A string that represents the description.

         credits{String}:
       A string that represents the credits.

         use_limitations{String}:
       A string that represents the use limitations."""
    ...

def ConvertWebMapToArcGISProject(webmap_json, template_pagx=..., mapframe_name=..., notes_gdb=...): # -> Webmap:
    """ConvertWebMapToArcGISProject (webmap_json, {template_pagx}, 
                                     {mapframe_name}, {notes_gdb})

       Converts a web map (in JSON format), that you intend to print or export, 
       to a map within an in-memory ArcGIS Project (.aprx) with option to generate
       a layout. The map or the layout can be further modified before finally 
       being printed or exported.

       The function generates an in-memory ArcGIS Project (.aprx). You can save
       it as a file on disk by calling Save().

       webmap_json{String}:
       The web map for printing in JavaScript Object Notation (JSON). See the 
       ExportWebMap JSON specification for more information. The ArcGIS Web APIs 
       (JavaScript, Flex, and Silverlight) allow developers to easily get this JSON 
       string from the web application.

       template_pagx{String}:
       A string representing the path and file name to a Layout file(.pagx) to use as the
       template for the page layout. The contents of the web map will be inserted into the
       map frame that is specified as a value to mapframe_name parameter. Layers in the 
       template_pagx file's map frame (and all other maps) will be preserved in the output
       mapDocument.(The default value is None).

       mapframe_name{String}:
       Name of the map frame who associated map’s contents will be updated. If value is 
       missing, and the layout contains multiple maps, the function will try to find the 
       map, that will get modified, in the following order. If there is only one map frame 
       (or multiple map frames associated to a single map) then that map gets used. 
       - A map frame that is named as MAIN_MAP
       - The largest map frame
       - The first map frame i.e. arcgisProject.ListLayouts()[0]

       Note: Most of the cases, the map should be empty i.e. does not contain any layer.
       (The default value is None).

       notes_gdb{String}:
       A string representing the path to a new or existing file geodatabase or an existing
       enterprise geodatabase connection where graphic features should be written. This 
       parameter should only be used if graphic features from the web map JSON need to be 
       preserved permanently."""
    ...

@_constants.maskargs
def ConvertLayoutFileToLayout(layout_file): # -> conversion | int | float | complex | basestring | list[Unknown] | tuple[Unknown, ...] | dict[Unknown, Unknown]:
    ...

def ListTimeZones(wildcard=...):
    """ListTimeZones({wildcard})

       Lists valid Time Zone IDs."""
    ...

