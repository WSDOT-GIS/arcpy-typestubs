"""
This type stub file was generated by pyright.
"""

from enum import IntEnum
from arcgisscripting import na as cna

"""Module for working with Route Solver."""
__all__ = ["RouteInputDataType", "RouteOutputDataType", "Route"]
class RouteInputDataType(IntEnum):
    """Enumeration for feature class names used by the Route solver to store inputs."""
    Stops = ...
    PointBarriers = ...
    LineBarriers = ...
    PolygonBarriers = ...


class RouteOutputDataType(IntEnum):
    """Enumeration for feature class names used by the Route solver to store outputs."""
    Stops = ...
    Routes = ...
    RouteEdges = ...
    DirectionPoints = ...
    DirectionLines = ...
    Directions = ...
    RouteJunctions = ...
    RouteTurns = ...


class Route(cna.Route):
    """Perform route analysis.

    # An example showing how to perform route analysis using a feature class for input stops.
    import arcpy
    import arcpy._na as nax

    nds = "C:/data/NorthAmerica.gdb/Routing/Routing_ND"
    nd_layer_name = "Routing_ND"
    input_stops = "C:/data/io.gdb/Stops"
    output_routes = "C:/data/io.gdb/Routes"

    arcpy.CheckOutExtension("network")
    arcpy.na.MakeNetworkDatasetLayer(nds, nd_layer_name)
    nd_travel_modes = arcpy.na.GetTravelModes(nd_layer_name)
    travel_mode = nd_travel_modes["Driving Time"]
    route = nax.Route(nd_layer_name)
    route.timeUnits = nax.TimeUnits.Minutes
    route.travelMode = travel_mode
    route.routeShapeType = nax.RouteShapeType.TrueShapeWithMeasures
    route.load(nax.RouteInputDataType.Stops, input_stops)
    result = route.solve()
    if result.solveSucceeded:
        result.export(nax.RouteOutputDataType.Routes, output_routes)
    else:
        print("Solved failed")
        print(result.solverMessages())

    """
    __slots__ = ...
    def __init__(self, in_network) -> None:
        """Create a route solver object based on the input network dataset.

        Args:
                in_network: A string representing the full catalog path to the network dataset, a network dataset
                            layer object, a string representing the name of a network dataset layer, or a portal URL
                            for a network analysis service. For best performance pass a network dataset layer object
                            or a network dataset layer name.

        Returns:
                No value.

        Raises:
                ValueError if the in_network does not exist or cannot be opened or if you are not signed in to the
                portal.

        """
        ...
    


