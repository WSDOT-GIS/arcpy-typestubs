"""
This type stub file was generated by pyright.
"""

from enum import IntEnum

"""Module to work with various Network Analyst Solvers."""
LimitError = ...
DirectionsError = ...
VrpResultError = ...
InputDataError = ...
__all__ = ["MessageSeverity", "TimeZoneUsage", "TravelDirection", "TimeUnits", "DistanceUnits", "DirectionsStyle", "RouteShapeType", "LimitError", "LineShapeType", "Importance", "DirectionsError", "VrpResultError", "InputDataError"]
class MessageSeverity(IntEnum):
    """Enumeration for severity level of solver messages."""
    All = ...
    Warning = ...
    Error = ...
    Info = ...


class TimeZoneUsage(IntEnum):
    """Enumeration for specifying time zone for the time of day."""
    LocalTimeAtLocations = ...
    UTC = ...


class TravelDirection(IntEnum):
    """Enumeration to specify the direction of travel to or from the facilities."""
    FromFacility = ...
    ToFacility = ...


class TimeUnits(IntEnum):
    """Enumeration for time units."""
    Seconds = ...
    Minutes = ...
    Hours = ...
    Days = ...


class DistanceUnits(IntEnum):
    """Enumeration for distance units."""
    Feet = ...
    Yards = ...
    Miles = ...
    NauticalMiles = ...
    Meters = ...
    Kilometers = ...


class DirectionsStyle(IntEnum):
    """Enumeration for the type of formatting style for directions."""
    Navigation = ...
    Campus = ...
    Desktop = ...


class RouteShapeType(IntEnum):
    """Enumeration for the type of output shape to be generated."""
    NoLine = ...
    StraightLine = ...
    TrueShape = ...
    TrueShapeWithMeasures = ...


class LineShapeType(IntEnum):
    """Enumeration for the shape type of the lines connecting each origin-destination pair."""
    NoLine = ...
    StraightLine = ...


class Importance(IntEnum):
    """Enumeration for specifying the importance for factors that influence analysis results."""
    Low = ...
    Medium = ...
    High = ...


